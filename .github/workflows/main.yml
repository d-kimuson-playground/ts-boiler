name: main

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.2"
          cache: "yarn"
          cache-dependency-path: yarn.lock

      - name: Get Yarn Cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        shell: bash

      - name: cache yarn global cache directory
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ matrix.os }}-node-v${{ matrix.node }}-deps-

      - name: install dependencies
        run: |
          yarn install --frozen-lockfile
        shell: bash

      - name: lint
        run: |
          yarn lint

      - name: test
        run: |
          yarn test

  dependabot_auto_merge:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: main
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
